services:
  nginx:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_volume:/app/backend/django_static
      - media_volume:/app/backend/media
      - ./docker/nginx/production:/etc/nginx/conf.d
      - ./docker/nginx/certbot/conf:/etc/letsencrypt
      - ./docker/nginx/certbot/www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt:rw
      - ./frontend/out:/usr/share/nginx/html
      - ./frontend/.next:/app/frontend/.next
    environment:
      - SSL_CERTIFICATE=/etc/letsencrypt/live/spin-world.site/fullchain.pem
      - SSL_CERTIFICATE_KEY=/etc/letsencrypt/live/spin-world.site/privkey.pem
    depends_on:
      - frontend
      - backend

  frontend:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    env_file: frontend/.env.production
    ports:
      - "3000:3000"
    expose:
      - "3000"

  backend:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    entrypoint: /app/docker/backend/wsgi-entrypoint.sh
    volumes:
      - static_volume:/app/backend/django_static
      - media_volume:/app/backend/media
    tty: true
    stdin_open: true
    env_file:
      - backend/.env
    expose:
      - 8000
    environment:
      - DATABASE_URL=postgresql://anexx:anexx61@db:5432/anexx_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis

  certbot:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/certbot/Dockerfile
    volumes:
      - ./docker/nginx/certbot/conf:/etc/letsencrypt
      - ./docker/nginx/certbot/www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt:rw
      - ./var/lib/letsencrypt:/var/lib/letsencrypt
      - ./var/log/letsencrypt:/var/log/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_DB=anexx_db
      - POSTGRES_USER=anexx
      - POSTGRES_PASSWORD=anexx61
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    environment:
      - PYTHONPATH=/app/backend/
      - CELERY_BROKER_URL=redis://app-redis-1:6379/0
      - CELERY_RESULT_BACKEND=redis://app-redis-1:6379/0
    command: celery -A backend.celery worker --loglevel=info
    volumes:
      - static_volume:/app/backend/django_static
      - media_volume:/app/backend/media
    depends_on:
      - redis
      - backend

  celery-beat:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    environment:
      - PYTHONPATH=/app/backend/
      - CELERY_BROKER_URL=redis://app-redis-1:6379/0
      - CELERY_RESULT_BACKEND=redis://app-redis-1:6379/0
    command: celery -A backend.celery beat --loglevel=info
    volumes:
      - static_volume:/app/backend/django_static
      - media_volume:/app/backend/media
    depends_on:
      - redis
      - backend

volumes:
  static_volume: {}
  media_volume: {}
  postgres_data: {}
