# Generated by Django 5.1.3 on 2024-11-30 23:43

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import system.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('ip_address', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(blank=True, max_length=255, null=True)),
                ('country_code', models.CharField(blank=True, max_length=255, null=True)),
                ('calling_code', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('loc', models.CharField(blank=True, max_length=50, null=True)),
                ('org', models.CharField(blank=True, max_length=255, null=True)),
                ('postal', models.CharField(blank=True, max_length=20, null=True)),
                ('timezone', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'db_table': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('code', models.CharField(max_length=5, primary_key=True, serialize=False, unique=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_name', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=50, null=True)),
                ('symbol', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
                'db_table': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='Guide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('general_steps', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=255)),
                ('introduction', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.PositiveIntegerField(default=1, unique=True)),
                ('name', models.CharField(default='Beginner', max_length=255, unique=True)),
                ('minimum_referrals', models.PositiveIntegerField(default=0)),
                ('minimum_spending', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('max_spins', models.PositiveIntegerField(default=1)),
                ('withdraw_percentage', models.DecimalField(decimal_places=0, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Rankings',
            },
        ),
        migrations.CreateModel(
            name='ReferralLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('level', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Referral Level',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=500)),
                ('review', models.TextField()),
                ('created_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('sender', models.BooleanField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('rate', models.DecimalField(decimal_places=6, max_digits=20)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', models.CharField(default='TZS', max_length=3)),
            ],
            options={
                'db_table': 'Shares',
            },
        ),
        migrations.CreateModel(
            name='TradeSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Trade Setting',
                'verbose_name_plural': 'Trade Settings',
                'db_table': 'Trade Settings',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.PositiveIntegerField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('email', models.EmailField(max_length=30, unique=True)),
                ('phone_number', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('avatar', models.ImageField(default='uploads/avatars/default.png', upload_to='uploads/avatars/')),
                ('referral_code', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='system_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='system_user_set_permissions', to='auth.permission')),
                ('country', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.country')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'Users',
            },
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_currency', models.CharField(default='USD', max_length=10)),
                ('target_currency', models.CharField(max_length=10)),
                ('rate', models.DecimalField(decimal_places=6, max_digits=10)),
                ('fetched_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('base_currency', 'target_currency')},
            },
        ),
        migrations.CreateModel(
            name='InvestmentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=1, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('duration_in_months', models.PositiveBigIntegerField(default=1)),
                ('prize_multiplier', models.PositiveBigIntegerField(default=0)),
                ('daily_withdraw_limit', models.DecimalField(decimal_places=0, default=200, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='system.currency')),
            ],
            options={
                'db_table': 'Investment Plans',
            },
        ),
        migrations.CreateModel(
            name='KYC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('document_type', models.CharField(blank=True, max_length=255, null=True)),
                ('document_1', models.TextField(blank=True, null=True)),
                ('document_2', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('verified', models.BooleanField(default=False)),
                ('rejected', models.BooleanField(default=False)),
                ('pending', models.BooleanField(default=False)),
                ('document_number', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.country')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'kyc',
            },
        ),
        migrations.CreateModel(
            name='NoticeSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subheading', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads/notices/')),
                ('paragraph', models.TextField(blank=True, null=True)),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='system.notice')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentOrder',
            fields=[
                ('id', models.PositiveIntegerField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(max_length=20)),
                ('cryptocurrency', models.CharField(max_length=10)),
                ('crypto_amount', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('confirmed', 'Confirmed'), ('failed', 'Failed'), ('expired', 'Expired'), ('canceled', 'Canceled')], default='pending', max_length=10)),
                ('payment_id', models.CharField(blank=True, max_length=50, null=True)),
                ('pay_address', models.CharField(blank=True, max_length=100, null=True)),
                ('pay_currency', models.CharField(blank=True, max_length=20, null=True)),
                ('expiration_estimate_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_number', models.CharField(default='1212121212', max_length=300)),
                ('recipient_name', models.CharField(blank=True, max_length=100, null=True)),
                ('minimum_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('exchange_rate', models.DecimalField(decimal_places=2, default=1, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.currency')),
                ('payment_process', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_process', to='system.guide')),
                ('method_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.paymenttype')),
            ],
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=255, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('used', models.BooleanField(default=False)),
                ('adjusted_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_promo_codes', to=settings.AUTH_USER_MODEL)),
                ('won_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_promo_codes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Promo Codes',
            },
        ),
        migrations.CreateModel(
            name='RankingUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ranking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.ranking')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'User Rankings',
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(blank=True, default=False, null=True)),
                ('invitation_code', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('referred', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals', to=settings.AUTH_USER_MODEL)),
                ('referrer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referred_users', to=settings.AUTH_USER_MODEL)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='system.referrallevel')),
            ],
            options={
                'db_table': 'referral',
            },
        ),
        migrations.CreateModel(
            name='Spinner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_eligible', models.BooleanField(default=False)),
                ('max_spins', models.PositiveIntegerField(default=0)),
                ('spin_count', models.PositiveIntegerField(default=0)),
                ('last_spin', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stake', models.DecimalField(decimal_places=5, default=0.0, max_digits=20)),
                ('target', models.DecimalField(decimal_places=5, default=0.0, max_digits=20)),
                ('paid', models.DecimalField(decimal_places=5, default=0.0, max_digits=20)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Trades',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('amount_before_deduction', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('rejected', 'Rejected')], max_length=20)),
                ('type', models.CharField(choices=[('deposit', 'Deposit'), ('spending', 'Spending'), ('reward', 'Reward'), ('interest', 'Interest'), ('commission', 'Commission'), ('withdrawal', 'Withdawal'), ('rebate', 'Rebate')], max_length=20)),
                ('address', models.CharField(default='', max_length=255)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='system.currency')),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.paymenttype')),
                ('parent_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_transactions', to='system.transaction')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Transactions',
            },
        ),
        migrations.CreateModel(
            name='PaymentProof',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('proof_file', models.FileField(upload_to='uploads/proofs/')),
                ('date_disbursed', models.DateTimeField(auto_now_add=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proofs', to='system.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='UserInvestmentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('expired', models.BooleanField(default=False)),
                ('investment_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.investmentplan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'User Investment Plans',
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.CharField(default=system.models.generate_unique_wallet_id, editable=False, max_length=30, primary_key=True, serialize=False, unique=True)),
                ('deposit', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('expenditure', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('withdrawal', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.currency')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Wallets',
            },
        ),
        migrations.AddField(
            model_name='transaction',
            name='wallet',
            field=models.ForeignKey(default='deposit', on_delete=django.db.models.deletion.CASCADE, to='system.wallet'),
        ),
        migrations.CreateModel(
            name='WithdrawalDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('real_name', models.CharField(max_length=255)),
                ('account_number', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_withdrawal_details', to=settings.AUTH_USER_MODEL)),
                ('withdrawal_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal_payment_type', to='system.paymenttype')),
            ],
        ),
        migrations.CreateModel(
            name='WithdrawalTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minimum_withdrawal_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('minimum_withdrawal_commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('withdrawal_timeframe_start', models.TimeField(default='07:00:00')),
                ('withdrawal_timeframe_end', models.TimeField(default='17:00:00')),
                ('withdrawal_processing_time_min', models.IntegerField(default=24)),
                ('withdrawal_processing_time_max', models.IntegerField(default=72)),
                ('withdrawals_processed_on_weekends', models.BooleanField(default=False)),
                ('withdrawal_tax_percentage', models.DecimalField(decimal_places=2, default=10.0, max_digits=4)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.currency')),
            ],
            options={
                'verbose_name': 'Withdrawal Term',
                'verbose_name_plural': 'Withdrawal Terms',
            },
        ),
    ]
